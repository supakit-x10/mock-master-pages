import { AntdRegistry } from "@ant-design/nextjs-registry";
import type { Metadata, NextPage } from "next";
import localFont from "next/font/local";
import { notFound } from "next/navigation";
import { locales } from "../../i18n/i18n.config";
import initTranslations from "../../i18n/init-translations";
import ThemeProvider from "../../providers/theme/theme.provider";
import TranslationsProvider from "../../providers/translations";
import { Children } from "../../types/children.type";
import { PageName } from "../../types/page-name.enum";
import { LocaleParams } from "../../types/params.type";
import "antd/dist/reset.css";
import "./globals.css";

const pageName: PageName[] = Object.values(PageName);

const kanit = localFont({
  src: "./fonts/Kanit-Regular.woff2",
  variable: "--font-kanit",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface Props extends Children {
  params: LocaleParams;
}

const Layout: NextPage<Props> = async ({ children, params }) => {
  const { locale } = await params;
  if (!locales.includes(locale as any)) notFound();
  const { resources } = await initTranslations({
    locale,
    pageName,
  });

  return (
    <html lang={locale}>
      <body className={`${kanit.variable}`}>
        <TranslationsProvider
          locale={locale}
          pageName={pageName}
          resources={resources}
        >
          <AntdRegistry>
            <ThemeProvider>{children}</ThemeProvider>
          </AntdRegistry>
        </TranslationsProvider>
      </body>
    </html>
  );
};

export default Layout;
